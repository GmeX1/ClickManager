from aiogram import F, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
import app.key as k

router = Router()


@router.message(CommandStart())
async def cmd_start(massage: Message):
    await massage.reply(f'–ü—Ä–∏–≤–µ—Ç. \n–¢–≤–æ–π ID:{massage.from_user.id} —Ç—ã –µ—Å—Ç—å –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ', reply_markup=k.main)


@router.message(Command('help'))
async def get_help(message: Message):
    await message.answer(f'/help - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞'
                         f'\n "–ü—Ä–æ—Ñ–∏–ª—å" - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –Ω–∞–º–∞–π–Ω–∏–ª –∫–ª–∏–∫–µ—Ä'
                         f'\n /start - –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞'
                         f'\n "–ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–ª–∏–∫–µ—Ä –Ω–∞ –∞—Ä–±—É–∑—ãüçâ" - –ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–ª–∏–∫–µ—Ä  ')


@router.message(F.text == 'üÜò–ü–æ–º–æ—â—å')
async def get_prof(message: Message):
    await message.answer(' –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç—å –µ–º—É –æ–± –æ—à–∏–±–∫–µ - ....')


@router.message(F.text == 'üë§–ü—Ä–æ—Ñ–∏–ª—å')
async def get_prof(message: Message):
    await message.answer('–ò–Ω—Ñ')


@router.message(F.text == 'üçâ–ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–ª–∏–∫–µ—Ä –Ω–∞ –∞—Ä–±—É–∑—ã')
async def get_prof(message: Message):
    await message.reply('‚úÖ–ö–ª–∏–∫–µ—Ä –≤–∫–ª—é—á–µ–Ω', reply_markup=k.OFF)


@router.callback_query(F.data == 'OFF')
async def back(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('–ö–ª–∏–∫–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω', reply_markup=k.ON)


@router.callback_query(F.data == 'ON')
async def back(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('–ö–ª–∏–∫–µ—Ä –≤–∫–ª—é—á–µ–Ω', reply_markup=k.OFF)


@router.message(F.text == '–ü—Ä–æ—Ñ–∏–ª—å')
async def get_prof(message: Message):
    await message.answer('–ò–Ω—Ñ')

